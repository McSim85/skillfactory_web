Кошки против собак против попугаев
Мы хотим использовать наши наработки в этом модуле и знания о SSE для сервиса голосования. В качестве "proof of concept" мы будем использовать совсем простую схему: голосование за любимый тип домашнего животного из предлагаемых трёх: кошки, собаки и попугаи.

У нас есть backend-сервер с тремя url, принимающими POST-запросы с пустым телом:

/sse/vote/cats — увеличивает на 1 число голосов за "коты"
/sse/vote/dogs — увеличивает на 1 число голосов за "собаки"
/sse/vote/parrots — увеличивает на 1 число голосов за "попугаи"
Также сервер предоставляет GET-запрос со статистикой голосования

/sse/vote/stats — это SSE-стрим с текущими результатами голосования
Для вашего удобства мы подняли backend-сервер по адресу https://sf-pyw.mosyag.in, использующий эти пути. Вы можете также написать свой для тестов (или использовать development-сервер bottle). База данных сервиса сбрасывается раз в день в районе полудня.

Такие задачи возникают довольно часто, когда надо сверстать по-быстрому голосование, которое при этом находится где-то внутри компании и не светится наружу. Например, это могут быть голосованиях на каких-то корпоративных мероприятиях типа семинаров или лекций. В каком-то смысле это упрощает жизнь параноиков, боящихся, что любая информация может убежать на сторону.

Задача и детали
Ваша задача состоит в том, чтобы написать фронт для двух задач:

Голосование: это форма или просто три кнопки, отправляющая запросы на сервер за выбранную фракцию
Отображение результатов голосования: это три прогресс-бара как из C2.8, отображающие текущие результаты голосования.
В рамках задания старайтесь использовать разные страницы для отображения и для голосования. Представьте, что пример использования такого сервиса — это сбор данных/мнений во время семинара. Вы не хотите, чтобы участники знали результаты голосования. Соответственно, сначала вы даёте только ссылку на голосование, а затем уже ссылку на результаты.

